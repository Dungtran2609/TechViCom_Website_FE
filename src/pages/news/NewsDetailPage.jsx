import React, { useEffect, useState, useMemo, useCallback } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { FaRegThumbsUp, FaRegCommentDots, FaFacebook, FaHeart, FaLink } from 'react-icons/fa';

// Gi·∫£ ƒë·ªãnh file index trong '.../../api' export c√°c module API
import { newsAPI } from '../../api';
// Gi·∫£ ƒë·ªãnh ƒë√¢y l√† custom hook ƒë·ªÉ hi·ªÉn th·ªã th√¥ng b√°o
import { useNotificationActions } from '../../components/notificationHooks';

/**
 * Helper an to√†n ƒë·ªÉ l·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage.
 * @returns {object|null} - ƒê·ªëi t∆∞·ª£ng ng∆∞·ªùi d√πng ho·∫∑c null n·∫øu kh√¥ng c√≥ ho·∫∑c l·ªói.
 */
const getCurrentUser = () => {
  try {
    const user = localStorage.getItem('user');
    return user ? JSON.parse(user) : null;
  } catch (error) {
    console.error("L·ªói khi ƒë·ªçc th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage:", error);
    return null;
  }
};

const NewsDetailPage = () => {
  // === HOOKS ===
  const { id: newsId } = useParams(); // ƒê·ªïi t√™n 'id' th√†nh 'newsId' cho r√µ r√†ng
  const navigate = useNavigate();
  const { error: showError, success: showSuccess } = useNotificationActions();
  const currentUser = useMemo(() => getCurrentUser(), []);

  // === STATE ===
  const [news, setNews] = useState(null);
  const [comments, setComments] = useState([]);
  const [loading, setLoading] = useState(true);
  const [pageError, setPageError] = useState(null); // L·ªói nghi√™m tr·ªçng khi t·∫£i trang

  // State cho form b√¨nh lu·∫≠n
  const [newComment, setNewComment] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  // State cho ch·ª©c nƒÉng "Th√≠ch"
  const [isLiked, setIsLiked] = useState(false);
  const [likeCount, setLikeCount] = useState(0);

  // === DATA FETCHING ===
  useEffect(() => {
    const controller = new AbortController();
    const { signal } = controller;

    const loadNewsDetails = async () => {
      setLoading(true);
      setPageError(null);
      try {
        // G·ªçi API ƒë·ªÉ l·∫•y chi ti·∫øt b√†i vi·∫øt (bao g·ªìm c·∫£ comments, like count, v√† tr·∫°ng th√°i like c·ªßa user)
        const response = await newsAPI.getNewsById(newsId, { signal });
        
        if (response.data) {
          const { data: newsData } = response;
          setNews(newsData);
          setComments(newsData.comments || []);
          // Gi·∫£ s·ª≠ backend tr·∫£ v·ªÅ 'likes_count' v√† 'is_liked_by_user'
          setLikeCount(newsData.likes_count || 0);
          setIsLiked(newsData.is_liked_by_user || false);
        } else {
          throw new Error("Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu b√†i vi·∫øt trong ph·∫£n h·ªìi t·ª´ API.");
        }
      } catch (err) {
        if (err.name === 'AbortError') return; // B·ªè qua n·∫øu request b·ªã h·ªßy
        
        console.error("L·ªói khi t·∫£i chi ti·∫øt b√†i vi·∫øt:", err);
        setPageError("Kh√¥ng th·ªÉ t·∫£i b√†i vi·∫øt. C√≥ th·ªÉ b√†i vi·∫øt kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.");
        setNews(null);
      } finally {
        setLoading(false);
      }
    };

    loadNewsDetails();

    // Cleanup function: H·ªßy request n·∫øu component b·ªã unmount
    return () => {
      controller.abort();
    };
  }, [newsId]);

  // === EVENT HANDLERS ===
  const handleCommentSubmit = async (e) => {
    e.preventDefault();
    if (!newComment.trim()) return;

    if (!currentUser) {
      showError("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ b√¨nh lu·∫≠n.", "Y√™u c·∫ßu ƒëƒÉng nh·∫≠p");
      navigate('/login');
      return;
    }

    setIsSubmitting(true);
    const previousComments = comments;

    // Optimistic Update: Th√™m b√¨nh lu·∫≠n v√†o UI ngay l·∫≠p t·ª©c
    const optimisticComment = {
      id: `temp-${Date.now()}`,
      content: newComment,
      created_at: new Date().toISOString(),
      user: { ...currentUser },
    };
    setComments([...comments, optimisticComment]);
    setNewComment('');

    try {
      const response = await newsAPI.addNewsComment(newsId, { content: newComment });
      // Thay th·∫ø b√¨nh lu·∫≠n t·∫°m th·ªùi b·∫±ng b√¨nh lu·∫≠n th·∫≠t t·ª´ server
      setComments(prev => prev.map(c => (c.id === optimisticComment.id ? response.data : c)));
      showSuccess("B√¨nh lu·∫≠n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i!", "Th√†nh c√¥ng");
    } catch (err) {
      console.error("L·ªói khi g·ª≠i b√¨nh lu·∫≠n:", err);
      showError("G·ª≠i b√¨nh lu·∫≠n th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i.", "L·ªói");
      setComments(previousComments); // Rollback: Quay l·∫°i tr·∫°ng th√°i c≈© n·∫øu c√≥ l·ªói
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleLike = useCallback(async () => {
    if (!currentUser) {
      showError("Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ th√≠ch b√†i vi·∫øt.", "Y√™u c·∫ßu ƒëƒÉng nh·∫≠p");
      navigate('/login');
      return;
    }

    // Optimistic Update
    const originalIsLiked = isLiked;
    setIsLiked(!originalIsLiked);
    setLikeCount(prev => (originalIsLiked ? prev - 1 : prev + 1));

    try {
      // G·ªçi API ƒë·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i like tr√™n server
      // Gi·∫£ s·ª≠ b·∫°n c√≥ m·ªôt h√†m API l√† `toggleLike`
      await newsAPI.toggleLike(newsId);
    } catch (err) {
      console.error("L·ªói khi c·∫≠p nh·∫≠t l∆∞·ª£t th√≠ch:", err);
      showError("Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t l∆∞·ª£t th√≠ch. Vui l√≤ng th·ª≠ l·∫°i.", "L·ªói");
      // Rollback n·∫øu c√≥ l·ªói
      setIsLiked(originalIsLiked);
      setLikeCount(prev => (originalIsLiked ? prev + 1 : prev - 1));
    }
  }, [currentUser, isLiked, navigate, newsId, showError]);

  const handleShareFacebook = () => {
    const url = encodeURIComponent(window.location.href);
    const title = encodeURIComponent(news?.title || '');
    const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${url}"e=${title}`;
    window.open(facebookUrl, 'facebook-share-dialog', 'width=600,height=400');
  };

  const handleCopyLink = async () => {
    try {
      await navigator.clipboard.writeText(window.location.href);
      showSuccess("ƒê√£ sao ch√©p link b√†i vi·∫øt!", "Th√†nh c√¥ng");
    } catch (err) {
      showError("Kh√¥ng th·ªÉ sao ch√©p link.", "L·ªói");
    }
  };

  // === MEMOIZED VALUES & UTILITIES ===
  const displayedComments = useMemo(() => {
    // L·ªçc c√°c b√¨nh lu·∫≠n b·ªã ·∫©n v√† ƒë·∫£o ng∆∞·ª£c ƒë·ªÉ hi·ªÉn th·ªã b√¨nh lu·∫≠n m·ªõi nh·∫•t l√™n ƒë·∫ßu
    return comments.filter(c => !c.is_hidden).reverse();
  }, [comments]);
  
  const formatDateTime = (timestamp) => {
    if (!timestamp) return 'V·ª´a xong';
    return new Date(timestamp).toLocaleString('vi-VN', {
      hour: '2-digit', minute: '2-digit', day: '2-digit', month: '2-digit', year: 'numeric'
    });
  };

  /**
   * CH√ö TH√çCH V·ªÄ HI·ªÇN TH·ªä N·ªòI DUNG HTML:
   * Vi·ªác s·ª≠ d·ª•ng `dangerouslySetInnerHTML` c√πng v·ªõi `.replace()` th·ªß c√¥ng c√≥ th·ªÉ ho·∫°t ƒë·ªông nh∆∞ng kh√° mong manh.
   * M·ªôt gi·∫£i ph√°p chuy√™n nghi·ªáp v√† an to√†n h∆°n l√† s·ª≠ d·ª•ng plugin `@tailwindcss/typography`.
   * B·∫°n ch·ªâ c·∫ßn b·ªçc n·ªôi dung trong th·∫ª div v·ªõi class "prose" v√† c·∫•u h√¨nh style trong `tailwind.config.js`.
   * V√≠ d·ª•: `<div className="prose prose-lg max-w-none" dangerouslySetInnerHTML={{ __html: news.content }} />`
   */

  // === RENDER LOGIC ===
  if (loading) {
    return (
      <div className="flex justify-center items-center min-h-[60vh]">
        <div className="text-center">
          <div className="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mb-4"></div>
          <p className="text-gray-600">ƒêang t·∫£i b√†i vi·∫øt...</p>
        </div>
      </div>
    );
  }

  if (pageError || !news) {
    return (
      <div className="text-center py-20 max-w-2xl mx-auto">
        <h2 className="text-2xl font-bold mb-4 text-red-600">ƒê√£ x·∫£y ra l·ªói</h2>
        <p className="text-gray-700">{pageError || "Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt b·∫°n y√™u c·∫ßu."}</p>
        <Link to="/news" className="mt-6 inline-block px-6 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors">
          Quay l·∫°i trang tin t·ª©c
        </Link>
      </div>
    );
  }
  
  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10 mt-10 md:mt-16">
      <div className="mb-6">
        <Link to="/news" className="inline-flex items-center gap-2 text-orange-600 hover:text-orange-700 font-medium transition-colors">
          ‚Üê Quay l·∫°i danh s√°ch b√†i vi·∫øt
        </Link>
      </div>
      
      <div className="bg-white rounded-2xl shadow-lg overflow-hidden">
        {news.image && (
          <img
            src={`http://localhost:8000/${news.image}`}
            alt={news.title}
            className="w-full h-[300px] md:h-[500px] object-cover"
            onError={(e) => { e.target.src = '/images/news/anhbv1.jpg'; }}
          />
        )}
        <div className="p-6 md:p-10">
          <div className="max-w-4xl mx-auto">
            <h1 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-6 leading-tight">
              {news.title}
            </h1>
            <div className="flex flex-wrap items-center gap-x-6 gap-y-3 text-gray-600 text-sm mb-8 pb-6 border-b border-gray-200">
              <div className="flex items-center gap-2">
                <img src={news.author?.avatar || '/images/avatar-default.png'} alt={news.author?.name} className="w-8 h-8 rounded-full object-cover"/>
                <span>T√°c gi·∫£: <strong className="text-orange-600">{news.author?.name || '·∫®n danh'}</strong></span>
              </div>
              <div className="flex items-center gap-2">
                <span>üóìÔ∏è</span>
                <span>{new Date(news.published_at).toLocaleDateString('vi-VN', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
              </div>
              {news.category && (
                <div className="flex items-center gap-2">
                  <span>üîñ</span>
                  <span>Danh m·ª•c: <strong className="text-orange-600">{news.category.name}</strong></span>
                </div>
              )}
            </div>
            
            <div
              className="prose prose-lg max-w-none"
              dangerouslySetInnerHTML={{ __html: news.content || 'Kh√¥ng c√≥ n·ªôi dung' }}
            />

            <div className="mt-10 pt-6 border-t border-gray-200">
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-4 text-sm text-gray-500">
                  <button onClick={handleLike} className={`flex items-center gap-2 transition-colors duration-200 ${isLiked ? 'text-red-500 font-semibold' : 'hover:text-red-500'}`}>
                    <FaHeart className={`w-5 h-5 ${isLiked ? 'fill-current' : ''}`} />
                    <span>{likeCount} Th√≠ch</span>
                  </button>
                  <button onClick={handleShareFacebook} className="flex items-center gap-2 hover:text-blue-600 transition-colors">
                    <FaFacebook className="w-5 h-5" />
                    <span className="hidden sm:inline">Chia s·∫ª</span>
                  </button>
                  <button onClick={handleCopyLink} className="flex items-center gap-2 hover:text-green-600 transition-colors">
                    <FaLink className="w-5 h-5" />
                    <span className="hidden sm:inline">Sao ch√©p link</span>
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div className="bg-white rounded-2xl shadow-lg p-6 md:p-10 mt-8">
        <h2 className="text-2xl text-center font-bold text-gray-800 mb-8">Th·∫£o lu·∫≠n ({displayedComments.length})</h2>
        <div className="max-w-4xl mx-auto">
          <div className="mb-8">
            {currentUser ? (
              <form onSubmit={handleCommentSubmit} className="flex items-start gap-4">
                <img src={currentUser.avatar || '/images/avatar-default.png'} alt="avatar" className="w-10 h-10 rounded-full object-cover flex-shrink-0"/>
                <div className="w-full">
                  <textarea
                    value={newComment}
                    onChange={(e) => setNewComment(e.target.value)}
                    className="w-full p-3 text-base bg-gray-100 rounded-lg border border-transparent focus:bg-white focus:border-orange-400 focus:ring-0 transition-colors"
                    rows="2"
                    placeholder="Vi·∫øt b√¨nh lu·∫≠n c·ªßa b·∫°n..."
                    required
                  />
                  <div className="mt-3 flex justify-end">
                    <button type="submit" disabled={isSubmitting || !newComment.trim()} className="px-6 py-2 text-sm font-semibold text-white bg-orange-500 rounded-lg hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all">
                      {isSubmitting ? 'ƒêang g·ª≠i...' : 'G·ª≠i b√¨nh lu·∫≠n'}
                    </button>
                  </div>
                </div>
              </form>
            ) : (
              <div className="text-center border-2 border-dashed rounded-lg p-6 bg-gray-50">
                <p className="mb-4 text-gray-600">B·∫°n c·∫ßn <Link to="/login" className="font-semibold text-orange-500 hover:underline">ƒëƒÉng nh·∫≠p</Link> ƒë·ªÉ tham gia th·∫£o lu·∫≠n.</p>
              </div>
            )}
          </div>

          <div className="space-y-4">
            {displayedComments.length > 0 ? (
              displayedComments.map(comment => (
                <div key={comment.id} className="flex items-start gap-4 py-4 border-b border-gray-100 last:border-b-0">
                  <img src={comment.user?.avatar || '/images/avatar-default.png'} alt={comment.user?.name} className="w-10 h-10 rounded-full object-cover flex-shrink-0"/>
                  <div className="flex-1">
                    <div className="flex justify-between items-start">
                      <div>
                        <p className="font-semibold text-gray-800 text-sm">{comment.user?.name || '·∫®n danh'}</p>
                        <p className="mt-1 text-gray-700 text-base whitespace-pre-wrap">{comment.content}</p>
                      </div>
                      <p className="text-xs text-gray-400 flex-shrink-0 ml-4 pt-1">{formatDateTime(comment.created_at)}</p>
                    </div>
                    <div className="mt-2 flex items-center gap-4 text-sm text-gray-500">
                      <button className="flex items-center gap-1.5 font-medium hover:text-orange-500 transition-colors"><FaRegThumbsUp /> Th√≠ch</button>
                      <button className="flex items-center gap-1.5 font-medium hover:text-orange-500 transition-colors"><FaRegCommentDots /> Tr·∫£ l·ªùi</button>
                    </div>
                  </div>
                </div>
              ))
            ) : (
              <p className="text-center text-gray-500 py-8">Ch∆∞a c√≥ b√¨nh lu·∫≠n n√†o. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n!</p>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default NewsDetailPage;